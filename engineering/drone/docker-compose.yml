version: '3.9'

services:
    # https://docs.drone.io/installation/github/multi-machine/#start-the-server
    drone:
        image: ${DOCKER_IMAGE}
        container_name: drone
        restart: unless-stopped
        ports:
            - 8085:80
            - "443:443"
            - "9001:9000"
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
            # - /opt/var/lib/drone:/data:rw
            - "./data:/data"
        environment:
            - DRONE_GITEA_SERVER=http://192.168.68.2:8084
            - DRONE_GIT_ALWAYS_AUTH=false

            - DRONE_GITEA_CLIENT_ID=${DRONE_GITEA_CLIENT_ID}
            - DRONE_GITEA_CLIENT_SECRET=${DRONE_GITEA_CLIENT_SECRET}
            - DRONE_LOGS_TRACE=true
            - DRONE_AGENTS_ENABLED=true
            - DRONE_RPC_SECRET=${DRONE_RPC_SECRET}
            - DRONE_SERVER_HOST=192.168.68.2:8085
            - DRONE_SERVER_PROTO=http
            - DRONE_TLS_AUTOCERT=false
            - DRONE_CLEANUP_INTERVAL=60m
            - DRONE_CLEANUP_DISABLED=false
            - DRONE_CLEANUP_DEADLINE_RUNNING=1h
            - DRONE_CLEANUP_DEADLINE_PENDING=2h
            - DRONE_USER_CREATE=username:${DRONE_ADMIN_USERNAME},admin:true
            - DRONE_RUNNER_NETWORKS=traefik
            - DRONE_GIT_USERNAME=wenbin
            - DRONE_GIT_PASSWORD=202402.
            # - DRONE_SERVER_PROXY_HOST=127.0.0.1:8084
        networks:
            - traefik
        labels:
            - "traefik.enable=true"
            - "traefik.docker.network=traefik"
            
            - "traefik.http.routers.drone.rule=Host(`drone.nas.com`)"
            - "traefik.http.routers.drone.entrypoints=http"

            - "traefik.tcp.routers.drone.rule=HostSNI(`gitea.nas.com`)"
            - "traefik.http.routers.drone.entrypoints=http,https,ssh"
            - "traefik.tcp.routers.drone.services=gitea"

            # - "traefik.http.routers.drone-ssl.entrypoints=https"
            # - "traefik.http.routers.drone-ssl.tls=true"
            # - "traefik.http.routers.drone-ssl.rule=Host(`${SERVICE_DOMAIN}`)"
            
            - "traefik.http.services.drone.loadbalancer.server.scheme=http"
            - "traefik.http.services.drone.loadbalancer.server.port=8085"
        logging:
            driver: "json-file"
            options:
                max-size: "10m"
        extra_hosts:
            - "${SERVICE_DOMAIN}:127.0.0.1"
        healthcheck:
            test: ["CMD-SHELL", "wget -q --spider --proxy off localhost:80/healthz || exit 1"]
            interval: 5s

volumes:
    drone-data:

networks:
    traefik:
        external: true
version: '3.9'

services:
  drone-runner:
    image: drone/drone-runner-docker:1.6.3
    container_name: ${SERVICE_DOMAIN}
    expose:
      - 3000
    ports:
      - 8086:3000
    environment:
      - DRONE_RPC_PROTO=http
      # - DRONE_RPC_HOST=192.168.68.2:8085
      - DRONE_RPC_HOST=drone
      - DRONE_RPC_SECRET=${DRONE_RPC_SECRET}
      - DRONE_RUNNER_CAPACITY=${DRONE_RUNNER_CAPACITY}
      - DRONE_RUNNER_NAME=${SERVICE_DOMAIN}
      - DRONE_RUNNER_NETWORKS=traefik
      - DRONE_DEBUG=false
      - DRONE_TRACE=false
    networks:
      - traefik
    restart: always
    volumes:
      # 标准 Linux 系统下使用
      # - /etc/localtime:/etc/localtime:ro
      # - /etc/timezone:/etc/timezone:ro
      - /var/run/docker.sock:/var/run/docker.sock
      - ./data:/data
    labels:
        - "traefik.enable=true"
        - "traefik.docker.network=traefik"
        
        - "traefik.http.routers.drone-runner.entrypoints=http"
        - "traefik.http.routers.drone-runner.rule=Host(`${SERVICE_DOMAIN}`)"

        # - "traefik.http.routers.drone-runner-ssl.entrypoints=https"
        # - "traefik.http.routers.drone-runner-ssl.tls=true"
        # - "traefik.http.routers.drone-runner-ssl.rule=Host(`${SERVICE_DOMAIN}`)"
        
        - "traefik.http.services.drone-runner.loadbalancer.server.scheme=http"
        - "traefik.http.services.drone-runner.loadbalancer.server.port=8086"
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
    extra_hosts:
      - "${SERVICE_DOMAIN}:127.0.0.1"
    healthcheck:
      test: ["CMD-SHELL", "wget -q --spider --proxy off localhost:3000/healthz || exit 1"]
      interval: 5s

networks:
  traefik:
    external: true
